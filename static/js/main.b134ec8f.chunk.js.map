{"version":3,"sources":["components/Hero.jsx","components/ListOfHeroes.jsx","pages/HeroesPage.jsx","containers/HeroesContainer.jsx","components/HeroForm.jsx","pages/CreateHeroPage.jsx","store/heroActions.js","containers/CreateHeroContainer.jsx","pages/UpdateHeroPage.jsx","containers/UpdateHeroContainer.jsx","pages/DeleteHeroPage.jsx","containers/DeleteHeroContainer.jsx","store/heroReducers.js","api/HeroApi.js","store/index.js","App.jsx","index.js"],"names":["memo","name","description","id","to","heroes","map","hero","key","isLoading","error","connect","state","items","HeroesPage","HeroForm","onSubmit","btnText","inputName","inputDescription","useState","updateName","updateDescription","notSave","setNotSaveStatus","useEffect","event","preventDefault","htmlFor","type","value","onChange","e","target","cols","rows","disabled","defaultProps","onCreateHero","STORAGE_NAME","createActions","REQUEST_HEROES","RECEIVE_HEROES","ADDING_HERO","ADD_HERO","CHANGING_HERO","CHANGE_HERO","REMOVING_HERO","REMOVE_HERO","requestHeroes","receiveHeroes","addingHero","addHero","changingHero","changeHero","removingHero","removeHero","createHero","callback","dispatch","getState","a","async","HeroApi","localStorage","postHero","savedHero","saveHeroesToLocalStorage","console","updateHero","putHero","deleteHero","setItem","JSON","stringify","props","history","bindActionCreators","stateProps","dispatchProps","push","CreateHeroPage","onUpdateHero","parseInt","match","params","find","item","UpdateHeroPage","onDeleteHero","onCancelDeleteHero","onClick","DeleteHeroPage","handleActions","combineActions","isError","payload","indexOfHero","findIndex","slice","getHeroes","Promise","resolve","reject","setTimeout","heroWithId","Date","valueOf","reducer","combineReducers","heroReducers","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","ReduxThunk","withExtraArgument","store","preloadedState","createStore","configureStore","parse","getItem","Error","App","exact","path","component","HeroesContainer","CreateHeroContainer","UpdateHeroContainer","DeleteHeroContainer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b134ec8f.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Draw information about the hero with control links â€“ edit and delete\n * @param {String} props.name\n * @param {String} props.description\n * @param {Number} props.id\n * @return {React.ReactElement}\n */\nexport function Hero({ name, description, id }) {\n  return (\n    <li>\n      <dl>\n        <dt>\n          <strong>{name}:</strong> {description}\n        </dt>\n        <dd>\n          <Link to={\"/update/\" + id}>Edit</Link>\n          {\" | \"}\n          <Link to={\"/delete/\" + id}>Delete</Link>\n        </dd>\n      </dl>\n    </li>\n  );\n}\n\nexport const heroPropTypes = (Hero.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n});\n\nexport default memo(Hero);\n","import React, { memo } from \"react\";\nimport Hero, { heroPropTypes } from \"./Hero\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Draw the list of heroes\n * @param {object} props.hero\n * @return {React.ReactElement}\n */\nexport function ListOfHeroes({ heroes }) {\n  return (\n    <ol>\n      {heroes.map(hero => (\n        <Hero key={hero.id} {...hero} />\n      ))}\n    </ol>\n  );\n}\n\nListOfHeroes.propTypes = {\n  heroes: PropTypes.arrayOf(PropTypes.shape(heroPropTypes)).isRequired\n};\n\nexport default memo(ListOfHeroes);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport ListOfHeroes from \"../components/ListOfHeroes\";\nimport { heroPropTypes } from \"../components/Hero\";\n\n/**\n * Page with the list of heroes\n * @param {Array} props.heroes\n * @param {Boolean} props.isLoading\n * @param {Boolean|Object} props.error\n * @return {React.ReactElement}\n */\nfunction HeroesPage({ heroes, isLoading, error }) {\n  return (\n    <>\n      <h3>List of aviable heroes</h3>\n      {isLoading ? (\n        <p>Heroes is loading...</p>\n      ) : (\n        <ListOfHeroes heroes={heroes} />\n      )}\n      {error && <p>Something goes wrong</p>}\n      <Link to=\"/create/\">Create a new hero</Link>\n    </>\n  );\n}\n\nHeroesPage.propTypes = {\n  heroes: PropTypes.arrayOf(PropTypes.shape(heroPropTypes)).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired\n};\n\nexport default memo(HeroesPage);\n","import HeroesPage from \"../pages/HeroesPage\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    heroes: state.heroes.items,\n    isLoading: state.heroes.isLoading,\n    error: state.heroes.error\n  };\n};\n\nexport default connect(mapStateToProps)(HeroesPage);\n","import React, { useState, useEffect, memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Draw and handle form for create or update the hero.\n * @param {function} props.onSubmit Handle submit event\n * @param {String} [props.btnText] Text of the submit button.\n * @param {String} [props.inputName] Value for name input.\n * @param {String} [props.inputDescription] Value for description input.\n * @param {Boolean} props.isLoading\n * @param {Boolean|Object} props.error\n * @return {React.ReactElement}\n */\nexport function HeroForm({\n  onSubmit,\n  btnText,\n  inputName,\n  inputDescription,\n  isLoading,\n  error\n}) {\n  const [name, updateName] = useState(inputName);\n  const [description, updateDescription] = useState(inputDescription);\n  const [notSave, setNotSaveStatus] = useState(false);\n\n  // If the user made changes and did not save them, show a warning\n  useEffect(() => {\n    if (inputName !== name || inputDescription !== description) {\n      setNotSaveStatus(true);\n    } else if (inputName === name && inputDescription === description) {\n      setNotSaveStatus(false);\n    }\n  }, [inputName, name, description, inputDescription]);\n\n  /**\n   * Handle form submit\n   * @param {React.SyntheticEvent} event\n   */\n  function handleSubmit(event) {\n    event.preventDefault();\n    onSubmit({ name, description });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <dl>\n        <dt>\n          <label htmlFor=\"name\">Hero name:</label>\n        </dt>\n        <dd>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={e => updateName(e.target.value)}\n          />\n        </dd>\n        <dt>\n          <label htmlFor=\"description\">Description of hero:</label>\n        </dt>\n        <dd>\n          <textarea\n            cols=\"70\"\n            rows=\"10\"\n            id=\"description\"\n            value={description}\n            onChange={e => updateDescription(e.target.value)}\n          />\n        </dd>\n        <dd>\n          <input type=\"submit\" value={btnText} disabled={isLoading} />{\" \"}\n          {isLoading && <span>Your hero is saving...</span>}\n          {notSave && !isLoading && <b>Your changes are not save</b>}\n          {error && <p>Something goes wrong. Try again later. </p>}\n        </dd>\n      </dl>\n    </form>\n  );\n}\n\nHeroForm.defaultProps = {\n  btnText: \"Submit\",\n  inputName: \"\",\n  inputDescription: \"\"\n};\n\nHeroForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  btnText: PropTypes.string,\n  inputName: PropTypes.string,\n  inputDescription: PropTypes.string,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired\n};\n\nexport default memo(HeroForm);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport HeroForm from \"../components/HeroForm\";\n\n/**\n * Hero creation page\n * @param {function} props.onCreateHero\n * @param {Boolean} props.isLoading\n * @param {Boolean|Object} props.error\n * @return {React.ReactElement}\n */\nfunction CreateHeroPage({ onCreateHero, isLoading, error }) {\n  return (\n    <>\n      <h3>Create a new hero</h3>\n      <HeroForm\n        onSubmit={onCreateHero}\n        btnText=\"Create hero\"\n        isLoading={isLoading}\n        error={error}\n      />\n      <Link to=\"/\">Back to the list of heroes</Link>\n    </>\n  );\n}\n\nCreateHeroPage.propTypes = {\n  onCreateHero: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired\n};\n\nexport default memo(CreateHeroPage);\n","import { createActions } from \"redux-actions\";\nconst STORAGE_NAME = \"heroes\";\n\nexport const {\n  requestHeroes,\n  receiveHeroes,\n  addingHero,\n  addHero,\n  changingHero,\n  changeHero,\n  removingHero,\n  removeHero\n} = createActions({\n  REQUEST_HEROES: () => ({}),\n  RECEIVE_HEROES: (heroes, isLoading = false, error = false) => ({\n    heroes,\n    isLoading,\n    error\n  }),\n  ADDING_HERO: () => ({}),\n  ADD_HERO: (hero, isLoading = false, error = false) => ({\n    hero,\n    isLoading,\n    error\n  }),\n  CHANGING_HERO: () => ({}),\n  CHANGE_HERO: (hero, isLoading = false, error = false) => ({\n    hero,\n    isLoading,\n    error\n  }),\n  REMOVING_HERO: () => ({}),\n  REMOVE_HERO: (id, isLoading = false, error = false) => ({\n    id,\n    isLoading,\n    error\n  })\n});\n\n/**\n * Add the list of heroes to the store from server\n * If heroes id not saved in the browser local storage, fetch them from server.\n * @return {Promise}\n */\nexport function fetchHeroes() {\n  return async (dispatch, getState, { HeroApi, localStorage }) => {\n    try {\n      // Check local storage\n      const heroes = JSON.parse(localStorage.getItem(STORAGE_NAME));\n      if (heroes === null) {\n        throw new Error();\n      }\n      dispatch(receiveHeroes(heroes));\n    } catch (err) {\n      try {\n        // If local storage is empty, fetch heroes from server\n        dispatch(requestHeroes());\n        const heroes = await HeroApi.getHeroes();\n        dispatch(receiveHeroes(heroes));\n\n        // And save them to the local storage\n        saveHeroesToLocalStorage(localStorage, getState);\n      } catch (err) {\n        console.error(err);\n        dispatch(receiveHeroes(null, false, err));\n      }\n    }\n  };\n}\n\n/**\n * Create hero, save on the server and in local storage\n * @param {Object} hero\n * @param {function|null} callback\n * @return {Promise}\n */\nexport function createHero(hero, callback = null) {\n  return async (dispatch, getState, { HeroApi, localStorage }) => {\n    try {\n      // Save new hero on server\n      dispatch(addingHero());\n      const savedHero = await HeroApi.postHero(hero);\n      dispatch(addHero(savedHero));\n\n      // Save heroes to the local storage\n      saveHeroesToLocalStorage(localStorage, getState);\n\n      // Call function after all actions\n      callback && callback(savedHero);\n    } catch (err) {\n      console.error(err);\n      dispatch(addHero(null, false, err));\n    }\n  };\n}\n\n/**\n * Update hero, save on the server and in local storage\n * @param {Object} hero\n * @param {function|null} callback\n * @return {Promise}\n */\nexport function updateHero(hero, callback = null) {\n  return async (dispatch, getState, { HeroApi, localStorage }) => {\n    try {\n      // Send changes of the hero to server\n      dispatch(changingHero());\n      const savedHero = await HeroApi.putHero(hero);\n      dispatch(changeHero(savedHero));\n\n      // Save heroes to the local storage\n      saveHeroesToLocalStorage(localStorage, getState);\n\n      // Call function after all actions\n      callback && callback(savedHero);\n    } catch (err) {\n      console.error(err);\n      dispatch(changeHero(null, false, err));\n    }\n  };\n}\n\n/**\n * Update hero, save on the server and in local storage\n * @param {Number} id\n * @param {function|null} callback\n * @return {Promise}\n */\nexport function deleteHero(id, callback = null) {\n  return async (dispatch, getState, { HeroApi, localStorage }) => {\n    try {\n      // Send request with delete the hero to server\n      dispatch(removingHero());\n      const savedHero = await HeroApi.deleteHero(id);\n      dispatch(removeHero(savedHero));\n\n      // Save heroes to the local storage\n      saveHeroesToLocalStorage(localStorage, getState);\n\n      // Call function after all actions\n      callback && callback(id);\n    } catch (err) {\n      console.error(err);\n      dispatch(removeHero(null, false, err));\n    }\n  };\n}\n\n/**\n * Save heroes list to the browser local storage\n * @param {Storage} localStorage\n * @param {getState} getState\n */\nfunction saveHeroesToLocalStorage(localStorage, getState) {\n  localStorage.setItem(STORAGE_NAME, JSON.stringify(getState().heroes.items));\n}\n","import CreateHeroPage from \"../pages/CreateHeroPage\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { createHero } from \"../store/heroActions\";\n\nconst mapStateToProps = (state, props) => {\n  return {\n    history: props.history,\n    isLoading: state.heroes.isLoading,\n    error: state.heroes.error\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ createHero }, dispatch);\n\nconst mergeProps = (stateProps, dispatchProps) => {\n  /**\n   * Add the hero to the store and redirect to the hero update page\n   * @param {Object} hero\n   */\n  function handleCreateHero(hero) {\n    dispatchProps.createHero(hero, hero =>\n      stateProps.history.push(\"/update/\" + hero.id)\n    );\n  }\n\n  return {\n    ...stateProps,\n    ...dispatchProps,\n    onCreateHero: handleCreateHero\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(CreateHeroPage);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport HeroForm from \"../components/HeroForm\";\nimport { Link } from \"react-router-dom\";\nimport { heroPropTypes } from \"../components/Hero\";\n\n/**\n * Hero update page\n * @param {Object} props.hero\n * @param {function} props.onUpdateHero\n * @param {Boolean} props.isLoading\n * @param {Boolean|Object} props.error\n * @return {React.ReactElement}\n */\nexport function UpdateHeroPage({ hero, onUpdateHero, isLoading, error }) {\n  return (\n    <>\n      <h3>\n        Update the hero <b>{hero && hero.name}</b>\n      </h3>\n      {hero ? (\n        <HeroForm\n          onSubmit={onUpdateHero}\n          inputName={hero.name}\n          inputDescription={hero.description}\n          btnText=\"Update hero\"\n          isLoading={isLoading}\n          error={error}\n        />\n      ) : (\n        <p>Hero is loading...</p>\n      )}\n      <Link to=\"/\">Back to the list of heroes</Link>\n    </>\n  );\n}\n\nUpdateHeroPage.propTypes = {\n  hero: PropTypes.shape(heroPropTypes),\n  onUpdateHero: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired\n};\n\nexport default memo(UpdateHeroPage);\n","import UpdateHeroPage from \"../pages/UpdateHeroPage\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { updateHero } from \"../store/heroActions\";\n\nconst mapStateToProps = (state, props) => {\n  const id = parseInt(props.match.params.id);\n\n  return {\n    id,\n    hero: state.heroes.items.find(item => item.id === id),\n    isLoading: state.heroes.isLoading,\n    error: state.heroes.error\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ updateHero }, dispatch);\n\nconst mergeProps = (stateProps, dispatchProps) => {\n  /**\n   * Update the hero to the store and redirect to the hero update page\n   * @param {object} hero\n   */\n  function handleUpdateHero(hero) {\n    dispatchProps.updateHero({ ...hero, id: stateProps.id });\n  }\n\n  return {\n    ...stateProps,\n    ...dispatchProps,\n    onUpdateHero: handleUpdateHero\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(UpdateHeroPage);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { heroPropTypes } from \"../components/Hero\";\n\n/**\n * Hero deletion page\n * @param {Object} props.hero\n * @param {function} props.onDeleteHero\n * @param {function} props.onCancelDeleteHero\n * @param {Boolean} props.isLoading\n * @param {Boolean|Object} props.error\n * @return {React.ReactElement}\n */\nfunction DeleteHeroPage({\n  hero,\n  onDeleteHero,\n  onCancelDeleteHero,\n  isLoading,\n  error\n}) {\n  return (\n    <>\n      <h3>\n        Delete the hero <strong>{hero && hero.name}</strong>\n      </h3>\n      {hero ? (\n        <p>\n          <span>\n            Are you sure what you want to delete the hero{\" \"}\n            <strong>{hero.name}</strong>?\n          </span>{\" \"}\n          <button id=\"cancel\" onClick={onCancelDeleteHero}>\n            No\n          </button>{\" \"}\n          <button id=\"delete\" onClick={onDeleteHero}>\n            Yes!\n          </button>{\" \"}\n          {isLoading && <span>Hero is deleting...</span>}\n        </p>\n      ) : (\n        <p>Hero is loading</p>\n      )}\n      {error && <p>Something goes wrong. Try again later. </p>}\n      <Link to=\"/\">Back to the list of heroes</Link>\n    </>\n  );\n}\n\nDeleteHeroPage.propTypes = {\n  hero: PropTypes.shape(heroPropTypes),\n  onDeleteHero: PropTypes.func.isRequired,\n  onCancelDeleteHero: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]).isRequired\n};\n\nexport default memo(DeleteHeroPage);\n","import DeleteHeroPage from \"../pages/DeleteHeroPage\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { deleteHero } from \"../store/heroActions\";\n\nconst mapStateToProps = (state, props) => {\n  const id = parseInt(props.match.params.id);\n\n  return {\n    history: props.history,\n    id,\n    hero: state.heroes.items.find(item => item.id === id),\n    isLoading: state.heroes.isLoading,\n    error: state.heroes.error\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ deleteHero }, dispatch);\n\nconst mergeProps = (stateProps, dispatchProps) => {\n  /**\n   * Cancel delete the hero and redirect to the main page\n   * @param {object} hero\n   */\n  function handleCancelDeleteHero(hero) {\n    stateProps.history.push(\"/\");\n  }\n  /**\n   * Delete the hero and redirect to the main page\n   * @param {object} hero\n   */\n  function handlelDeleteHero(hero) {\n    dispatchProps.deleteHero(stateProps.id, () => stateProps.history.push(\"/\"));\n  }\n\n  return {\n    ...stateProps,\n    ...dispatchProps,\n    onCancelDeleteHero: handleCancelDeleteHero,\n    onDeleteHero: handlelDeleteHero\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(DeleteHeroPage);\n","import { handleActions, combineActions } from \"redux-actions\";\nimport {\n  requestHeroes,\n  receiveHeroes,\n  addingHero,\n  addHero,\n  changingHero,\n  changeHero,\n  removingHero,\n  removeHero\n} from \"./heroActions\";\n\nconst defaultState = {\n  items: [],\n  isLoading: false,\n  error: false\n};\n\nexport default handleActions(\n  {\n    [combineActions(\n      requestHeroes,\n      addingHero,\n      changingHero,\n      removingHero\n    )]: state => {\n      return { ...state, isLoading: true, isError: false };\n    },\n    [receiveHeroes]: (state, { payload: { heroes, isLoading, error } }) => {\n      return { items: heroes, isLoading, error };\n    },\n    [addHero]: (state, { payload: { hero, isLoading, error } }) => {\n      return {\n        items: [...state.items, hero],\n        isLoading,\n        error\n      };\n    },\n    [changeHero]: (state, { payload: { hero, isLoading, error } }) => {\n      const indexOfHero = state.items.findIndex(item => item.id === hero.id);\n      return {\n        items: [\n          ...state.items.slice(0, indexOfHero),\n          hero,\n          ...state.items.slice(indexOfHero + 1)\n        ],\n        isLoading,\n        error\n      };\n    },\n    [removeHero]: (state, { payload: { id, isLoading, error } }) => {\n      const indexOfHero = state.items.findIndex(item => item.id === id);\n      return {\n        items: [\n          ...state.items.slice(0, indexOfHero),\n          ...state.items.slice(indexOfHero + 1)\n        ],\n        isLoading,\n        error\n      };\n    }\n  },\n  defaultState\n);\n","import heroes from \"./heroes.json\";\n\nconst FAKE_TIMEOUT = 2000;\n\nexport const HeroApi = {\n  /**\n   * Get list of heroes from \"fake server\"\n   * @return {Promise}\n   */\n  getHeroes: () => {\n    return new Promise((resolve, reject) =>\n      setTimeout(() => resolve(heroes), FAKE_TIMEOUT)\n    );\n  },\n  /**\n   * Add new hero to \"fake server\"\n   * @param {object} hero\n   * @return {Promise}\n   */\n  postHero: hero => {\n    const heroWithId = { id: new Date().valueOf(), ...hero };\n    return new Promise((resolve, reject) =>\n      setTimeout(() => resolve(heroWithId), FAKE_TIMEOUT)\n    );\n  },\n  /**\n   * Update hero by id in \"fake server\"\n   * @param {object} hero\n   * @return {Promise}\n   */\n  putHero: hero => {\n    return new Promise((resolve, reject) =>\n      setTimeout(() => resolve(hero), FAKE_TIMEOUT)\n    );\n  },\n  /**\n   * Delete hero by id from \"fake server\"\n   * @param {number} id\n   * @return {Promise}\n   */\n  deleteHero: id => {\n    return new Promise((resolve, reject) =>\n      setTimeout(() => resolve(id), FAKE_TIMEOUT)\n    );\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport heroReducers from \"./heroReducers\";\nimport { HeroApi } from \"../api/HeroApi\";\n\nconst reducer = combineReducers({ heroes: heroReducers });\nconst composeEnhancers =\n  (typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n  compose;\nconst enhancer = composeEnhancers(\n  applyMiddleware(ReduxThunk.withExtraArgument({ HeroApi, localStorage }))\n);\n\n/**\n * Create new store with init state and reducers\n * @param {Object} preloadedState Init state for store\n * @return {Store}\n */\nexport function configureStore(preloadedState = {}) {\n  return createStore(reducer, preloadedState, enhancer);\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport HeroesContainer from \"./containers/HeroesContainer\";\nimport CreateHeroContainer from \"./containers/CreateHeroContainer\";\nimport UpdateHeroContainer from \"./containers/UpdateHeroContainer\";\nimport DeleteHeroContainer from \"./containers/DeleteHeroContainer\";\nimport { configureStore } from \"./store\";\nimport { fetchHeroes } from \"./store/heroActions\";\n\nconst store = configureStore();\n\n// Init store\nstore.dispatch(fetchHeroes());\n\n/**\n * Main component of the application\n * Ð¡onnecting store and create routes\n * @return {React.ReactElement}\n */\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={HeroesContainer} />\n          <Route exact path=\"/create\" component={CreateHeroContainer} />\n          <Route exact path=\"/update/:id\" component={UpdateHeroContainer} />\n          <Route exact path=\"/delete/:id\" component={DeleteHeroContainer} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}